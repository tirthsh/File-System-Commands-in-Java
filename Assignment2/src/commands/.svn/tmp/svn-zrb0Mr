package commands;

import java.util.List;
import fileSystem.Directory;
import fileSystem.fileSys;
import fileSystem.fileSystem;

public class mkdir {
  fileSystem fs = fileSystem.getFileSystemFp();

  private void cannotAdd(String path) {
    System.out.println("mkdir: cannot add " + path);
  }

  public void execute(List <String> pathnames) {
    for (int i = 0; i < pathnames.size(); i++) {
      Directory root = fs.getRoot();
      String path = pathnames.get(i);

      // Change string into preferred format
      if (path.length() != 1 && path.endsWith("/"))
        path = path.substring(0, path.length() - 1);

      if (path.contains("/")) {
        // If path present, must check path
        // Splitting given path into multiple parts to check validity
        String[] parts = path.split("/");
        String path1 = path.substring(0, path.lastIndexOf("/"));
        String path2 = parts[parts.length - 1];

        // If path is absolute
        if (path.startsWith("/")) {
          // If path is in the format of "/something"
          Directory dir = new Directory(path2);
          if (parts.length == 2) {
            if (!root.addDir(dir))
              this.cannotAdd(path2);
          }

          // If path is not in the format of "/something" ie. longer
          else if (fs.isValidPath(path1)) {
            Directory tempdir = fs.goToDirectoryInPath(path1);
            if (!tempdir.addDir(dir)) {
              this.cannotAdd(path2);
            }
          } // If the directory isn't valid, print error message
          else {
            this.cannotAdd(path2);
          }
          

          // If path is relative
        } else {
          Directory dir = new Directory(path2);
          if (fs.isValidPath(path1)) {
            Directory tempdir = fs.goToDirectoryInPath(path1);
            if (!tempdir.addDir(dir)) {
              this.cannotAdd(path2);
            }
          }else{
            this.cannotAdd(path2);
          }
        }

        // If path is given, but no slashes present
      } else {
        Directory tempdir = new Directory(path);
        if (!(fs.getCurrentWorkingDirectory().addDir(tempdir))) {
          this.cannotAdd(path);
        }
      }
    }
  }


  public void manual() {
    System.out.println(
        "List the contents of the directories specified in PATHs, if no PATHs "
            + "are given, print contents of the current working directory. "
            + "If the given PATHs leads to a file, print the contents "
            + "of the file ");
  }

}


