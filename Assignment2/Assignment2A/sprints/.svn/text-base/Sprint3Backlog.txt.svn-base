//Sprint 3 Backlog.  
June 20 to June 27


User Stories from Product Backlog that we will address in this sprint:
a) As a user, I should be able to change my current working directory relative to the current directory (cd).
b) As a user, I should be able to change my current working directory using a full path (cd).
c) As a user, I should be able to see my recent commands, I should be able to specify how many commands I would like to see (history).
d) As a user, I should be able to save the current working directory into a stack (pushd).
e) As a user, I should be able to retrieve a working directory from the stack (popd).
f) As a user, I should be able to write to shell (echo). 
g) As a user, I should be able to write into a file (echo).
h) As a user, I should be able to create a new file (echo).
i) As a user, I should be able to append to a file (echo).
j) As a user, I should be able to get documentation for a command (man).
k) As a user, I should be able to make directories (mkdir)
l) As a user, I should be able to validate all commands (Validator).
m) As a user, I should be able to print files in directories in current working directory (ls)
n) As a user, I should only be able to perform actions on valid commands, else raise error (JShell)


Specific tasks to be accomplished:
a-1. (cd) Change the fileSystem root directory
b-1. (cd) Write base code for fileSystem node class
c-1. (history) Write base code for history class
d-1. (pushd) Write base code for stack class and pushing file onto stack
e-1. (popd) Write base code for popping file from stack
f-1. (echo) Write class to change current directory path
g-1. (echo) Write class to print contents of file on the shell
h-1. (echo) Finish implementing validator for each commands, arguments and paths
i-1. (echo) Write and raise exception classes for commands as necessary
j-1. (man) Write documentation and body for man 
k-1. (mkdir) Write class to create mkdir command
l-l. (Validator) Finish implementation of validator
m-1. (ls) Write class to print contents of currnet working directory
n-1. (JShell) Create test cases and exception errors for wrong inputs


These tasks are assigned as follows:

User: Jerry
Tasks: a, b, f, g, h, i

User: Manan
Tasks: c, j, n, l

User: Nick
Tasks: d, e, m

User: Tirth
Tasks: k, l